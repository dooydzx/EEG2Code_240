A 240-Target VEP-Based BCI System Employing Narrow-Band Random Sequences
We have provided here an algorithm for offline analysis of the accuracy rate of 240 targets using the method described in the text. 


STEP:
The file sequencegeneration.m is the program for stimulus sequence generation and filtering, used to generate random stimulus sequences.
The file dataprocess.m performs data preprocessing operations, reads data for offline single-target training, offline single-target testing, and online multi-target testing, and carries out preprocessing operations such as filtering and normalization.
The EEG2Code algorithm described in this paper is included in the file EEG2Code_offline.py. This program performs EEG-to-sequence prediction training based on training data and then makes EEG-to-sequence predictions on the test data, ultimately outputting the predicted sequence as the result.
The file calculateaccuracy.m is used to calculate accuracy, and the method is to compare the matching degree between the predicted sequence generated by EEG2Code and the original sequence.

Please run the programs in the following order:

First, run dataprocess.m for data preprocessing.
Then, run EEG2Code_offline.py for model training and testing.
Finally, run calculateaccuracy.m to calculate prediction accuracy. 

he stimulus sequences used in the training and testing phases of the experiment are already provided in champion_sequencetrain.mat and champion_sequencetest.mat. sequencegeneration.m is an example for generating new stimuli.

DATA

Data can be fonded in https://zenodo.org/records/14587455.
The data for single-target and multi-target tests from 18 subjects are provided. Each file contains the training and testing data for one subject. The files labeled `01c` represent single-target test data, while those labeled `mc` represent multi-target test data. Each file includes:
- `test_data_x` of size 240 × 21 × 1170, representing the test EEG data (240 classes × 21 channels × 1170 data points).
- `train_data_y` of size  360 × 1000, representing the stimulus sequences during the training phase (30 sequences repeated 12 times=360 × 1000 data points).
- `train_data_x` of size 360× 21 × 1170,representing training EEG data (30*12=360 × 21 channels × 1000 data points).
This data structure is designed to support the training and testing of the EEG2Code algorithm.
