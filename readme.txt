A 240-Target VEP-Based BCI System Employing Narrow-Band Random Sequences
We have provided here an algorithm for offline analysis of the accuracy rate of 240 targets using the method described in the text. The data can be found at https://zenodo.org/records/14587455.


STEP:
The algorithm for EEG2Code, as described in the article, is provided in the file `EEG2Code_offline.py`. The program completes the training of EEG-to-sequence prediction based on the training data, and subsequently performs EEG-to-sequence prediction on the test data, outputting the predicted sequence as the result.
The file `calculateaccuracy.m` is used to compute the accuracy by comparing the predicted sequences generated by EEG2Code with the original sequences. 
Run `EEG2Code_offline.py` first, followed by `calculateaccuracy.m`. 
The computation should be feasible on a system with 32 GB of RAM and an NVIDIA GPU with at least 12 GB of VRAM.

DATA

Data can be fonded in https://zenodo.org/records/14587455.
The data for single-target and multi-target tests from 18 subjects are provided. Each file contains the training and testing data for one subject. The files labeled `01c` represent single-target test data, while those labeled `mc` represent multi-target test data. Each file includes:
- `test_data_x` of size 240 × 21 × 1170, representing the test EEG data (240 classes × 21 channels × 1170 data points).
- `train_data_y` of size  360 × 1000, representing the stimulus sequences during the training phase (30 sequences repeated 12 times=360 × 1000 data points).
- `train_data_x` of size 360× 21 × 1170,representing training EEG data (30*12=360 × 21 channels × 1000 data points).
This data structure is designed to support the training and testing of the EEG2Code algorithm.
